const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-JROmWE3J.js","assets/clsx.m-DHulAg21.js","assets/index-CCxaLuPB.js","assets/index-DtlqxvZ1.css","assets/localBatchGatewayRequest-DNg6gRev.js","assets/hashMessage-DhFo9gqm.js","assets/secp256k1-D6pVxJA_.js","assets/hmac-BEBn_y_2.js","assets/index-sPALpEZQ.js","assets/index-BqCOMQhr.js","assets/index-CCQ-jUte.js","assets/index-B28mDNgh.js"])))=>i.map(i=>d[i]);
import{G as L,I as y,J as I,K as C,L as A,U as b,_ as D,P as _,M as x}from"./index-CCxaLuPB.js";import{O as T}from"./index-CCxaLuPB.js";S.type="coinbaseWallet";function S(d={}){return d.version==="3"||d.headlessMode?K(d):N(d)}function N(d){let v,l,a,r;return L(o=>({id:"coinbaseWalletSDK",name:"Coinbase Wallet",rdns:"com.coinbase.wallet",type:S.type,async connect({chainId:t,...i}={}){try{const n=await this.getProvider(),e=(await n.request({method:"eth_requestAccounts",params:"instantOnboarding"in i&&i.instantOnboarding?[{onboarding:"instant"}]:[]})).map(s=>y(s));l||(l=this.onAccountsChanged.bind(this),n.on("accountsChanged",l)),a||(a=this.onChainChanged.bind(this),n.on("chainChanged",a)),r||(r=this.onDisconnect.bind(this),n.on("disconnect",r));let c=await this.getChainId();if(t&&c!==t){const s=await this.switchChain({chainId:t}).catch(u=>{if(u.code===b.code)throw u;return{id:c}});c=(s==null?void 0:s.id)??c}return{accounts:e,chainId:c}}catch(n){throw/(user closed modal|accounts received is empty|user denied account|request rejected)/i.test(n.message)?new b(n):n}},async disconnect(){var i;const t=await this.getProvider();l&&(t.removeListener("accountsChanged",l),l=void 0),a&&(t.removeListener("chainChanged",a),a=void 0),r&&(t.removeListener("disconnect",r),r=void 0),t.disconnect(),(i=t.close)==null||i.call(t)},async getAccounts(){return(await(await this.getProvider()).request({method:"eth_accounts"})).map(i=>y(i))},async getChainId(){const i=await(await this.getProvider()).request({method:"eth_chainId"});return Number(i)},async getProvider(){if(!v){const t=(()=>{var e;return typeof d.preference=="string"?{options:d.preference}:{...d.preference,options:((e=d.preference)==null?void 0:e.options)??"all"}})(),{createCoinbaseWalletSDK:i}=await D(async()=>{const{createCoinbaseWalletSDK:e}=await import("./index-JROmWE3J.js");return{createCoinbaseWalletSDK:e}},__vite__mapDeps([0,1,2,3,4,5,6,7]));v=i({...d,appChainIds:o.chains.map(e=>e.id),preference:t}).getProvider()}return v},async isAuthorized(){try{return!!(await this.getAccounts()).length}catch{return!1}},async switchChain({addEthereumChainParameter:t,chainId:i}){var c,s,u,w;const n=o.chains.find(f=>f.id===i);if(!n)throw new I(new C);const e=await this.getProvider();try{return await e.request({method:"wallet_switchEthereumChain",params:[{chainId:A(n.id)}]}),n}catch(f){if(f.code===4902)try{let h;t!=null&&t.blockExplorerUrls?h=t.blockExplorerUrls:h=(c=n.blockExplorers)!=null&&c.default.url?[(s=n.blockExplorers)==null?void 0:s.default.url]:[];let p;(u=t==null?void 0:t.rpcUrls)!=null&&u.length?p=t.rpcUrls:p=[((w=n.rpcUrls.default)==null?void 0:w.http[0])??""];const g={blockExplorerUrls:h,chainId:A(i),chainName:(t==null?void 0:t.chainName)??n.name,iconUrls:t==null?void 0:t.iconUrls,nativeCurrency:(t==null?void 0:t.nativeCurrency)??n.nativeCurrency,rpcUrls:p};return await e.request({method:"wallet_addEthereumChain",params:[g]}),n}catch(h){throw new b(h)}throw new I(f)}},onAccountsChanged(t){t.length===0?this.onDisconnect():o.emitter.emit("change",{accounts:t.map(i=>y(i))})},onChainChanged(t){const i=Number(t);o.emitter.emit("change",{chainId:i})},async onDisconnect(t){o.emitter.emit("disconnect");const i=await this.getProvider();l&&(i.removeListener("accountsChanged",l),l=void 0),a&&(i.removeListener("chainChanged",a),a=void 0),r&&(i.removeListener("disconnect",r),r=void 0)}}))}function K(d){let l,a,r,o,t;return L(i=>({id:"coinbaseWalletSDK",name:"Coinbase Wallet",rdns:"com.coinbase.wallet",type:S.type,async connect({chainId:n}={}){try{const e=await this.getProvider(),c=(await e.request({method:"eth_requestAccounts"})).map(u=>y(u));r||(r=this.onAccountsChanged.bind(this),e.on("accountsChanged",r)),o||(o=this.onChainChanged.bind(this),e.on("chainChanged",o)),t||(t=this.onDisconnect.bind(this),e.on("disconnect",t));let s=await this.getChainId();if(n&&s!==n){const u=await this.switchChain({chainId:n}).catch(w=>{if(w.code===b.code)throw w;return{id:s}});s=(u==null?void 0:u.id)??s}return{accounts:c,chainId:s}}catch(e){throw/(user closed modal|accounts received is empty|user denied account)/i.test(e.message)?new b(e):e}},async disconnect(){const n=await this.getProvider();r&&(n.removeListener("accountsChanged",r),r=void 0),o&&(n.removeListener("chainChanged",o),o=void 0),t&&(n.removeListener("disconnect",t),t=void 0),n.disconnect(),n.close()},async getAccounts(){return(await(await this.getProvider()).request({method:"eth_accounts"})).map(e=>y(e))},async getChainId(){const e=await(await this.getProvider()).request({method:"eth_chainId"});return Number(e)},async getProvider(){var n;if(!a){const e=await(async()=>{const{default:f}=await D(async()=>{const{default:h}=await import("./index-sPALpEZQ.js").then(p=>p.i);return{default:h}},__vite__mapDeps([8,2,3,1]));return typeof f!="function"&&typeof f.default=="function"?f.default:f})();l=new e({...d,reloadOnDisconnect:!1});const c=(n=l.walletExtension)==null?void 0:n.getChainId(),s=i.chains.find(f=>d.chainId?f.id===d.chainId:f.id===c)||i.chains[0],u=d.chainId||(s==null?void 0:s.id),w=d.jsonRpcUrl||(s==null?void 0:s.rpcUrls.default.http[0]);a=l.makeWeb3Provider(w,u)}return a},async isAuthorized(){try{return!!(await this.getAccounts()).length}catch{return!1}},async switchChain({addEthereumChainParameter:n,chainId:e}){var u,w,f,h;const c=i.chains.find(p=>p.id===e);if(!c)throw new I(new C);const s=await this.getProvider();try{return await s.request({method:"wallet_switchEthereumChain",params:[{chainId:A(c.id)}]}),c}catch(p){if(p.code===4902)try{let g;n!=null&&n.blockExplorerUrls?g=n.blockExplorerUrls:g=(u=c.blockExplorers)!=null&&u.default.url?[(w=c.blockExplorers)==null?void 0:w.default.url]:[];let U;(f=n==null?void 0:n.rpcUrls)!=null&&f.length?U=n.rpcUrls:U=[((h=c.rpcUrls.default)==null?void 0:h.http[0])??""];const q={blockExplorerUrls:g,chainId:A(e),chainName:(n==null?void 0:n.chainName)??c.name,iconUrls:n==null?void 0:n.iconUrls,nativeCurrency:(n==null?void 0:n.nativeCurrency)??c.nativeCurrency,rpcUrls:U};return await s.request({method:"wallet_addEthereumChain",params:[q]}),c}catch(g){throw new b(g)}throw new I(p)}},onAccountsChanged(n){n.length===0?this.onDisconnect():i.emitter.emit("change",{accounts:n.map(e=>y(e))})},onChainChanged(n){const e=Number(n);i.emitter.emit("change",{chainId:e})},async onDisconnect(n){i.emitter.emit("disconnect");const e=await this.getProvider();r&&(e.removeListener("accountsChanged",r),r=void 0),o&&(e.removeListener("chainChanged",o),o=void 0),t&&(e.removeListener("disconnect",t),t=void 0)}}))}k.type="safe";function k(d={}){const{shimDisconnect:v=!1}=d;let l,a;return L(r=>({id:"safe",name:"Safe",type:k.type,async connect(){var n;const o=await this.getProvider();if(!o)throw new _;const t=await this.getAccounts(),i=await this.getChainId();return a||(a=this.onDisconnect.bind(this),o.on("disconnect",a)),v&&await((n=r.storage)==null?void 0:n.removeItem("safe.disconnected")),{accounts:t,chainId:i}},async disconnect(){var t;const o=await this.getProvider();if(!o)throw new _;a&&(o.removeListener("disconnect",a),a=void 0),v&&await((t=r.storage)==null?void 0:t.setItem("safe.disconnected",!0))},async getAccounts(){const o=await this.getProvider();if(!o)throw new _;return(await o.request({method:"eth_accounts"})).map(y)},async getProvider(){if(typeof window<"u"&&(window==null?void 0:window.parent)!==window){if(!l){const{default:t}=await D(async()=>{const{default:c}=await import("./index-BqCOMQhr.js");return{default:c}},__vite__mapDeps([9,10,2,3,5])),i=new t(d),n=await x(()=>i.safe.getInfo(),{timeout:d.unstable_getInfoTimeout??10});if(!n)throw new Error("Could not load Safe information");const e=await(async()=>{const c=await D(()=>import("./index-B28mDNgh.js").then(s=>s.i),__vite__mapDeps([11,2,3,10]));return typeof c.SafeAppProvider!="function"&&typeof c.default.SafeAppProvider=="function"?c.default.SafeAppProvider:c.SafeAppProvider})();l=new e(n,i)}return l}},async getChainId(){const o=await this.getProvider();if(!o)throw new _;return Number(o.chainId)},async isAuthorized(){var o;try{return v&&await((o=r.storage)==null?void 0:o.getItem("safe.disconnected"))?!1:!!(await this.getAccounts()).length}catch{return!1}},onAccountsChanged(){},onChainChanged(){},onDisconnect(){r.emitter.emit("disconnect")}}))}export{S as coinbaseWallet,T as injected,k as safe};
